### Starting build.
# Target: gmail.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:gmail.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules gmail.ml > gmail.ml.depends # cached
# Target: ast.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:ast.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o ast.cmo ast.ml # cached
# Target: codegen.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:codegen.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules codegen.ml > codegen.ml.depends # cached
# Target: evalHelper.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:evalHelper.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules evalHelper.ml > evalHelper.ml.depends # cached
# Target: lift.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:lift.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules lift.ml > lift.ml.depends # cached
# Target: sast.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:sast.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules sast.ml > sast.ml.depends # cached
# Target: sast.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:sast.cmo, file:sast.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o sast.cmo sast.ml # cached
# Target: semant.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:semant.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules semant.ml > semant.ml.depends # cached
# Target: semant.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:semant.cmo, file:semant.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o semant.cmo semant.ml # cached
# Target: lift.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:lift.cmo, file:lift.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o lift.cmo lift.ml # cached
# Target: evalHelper.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:evalHelper.cmo, file:evalHelper.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o evalHelper.cmo evalHelper.ml # cached
# Target: codegen.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:codegen.cmo, file:codegen.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o codegen.cmo codegen.ml # cached
# Target: gmailparse.mly, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:mly, file:gmailparse.mly, infer, ocaml, ocamlyacc, parser, quiet, traverse }
ocamlyacc gmailparse.mly # cached
# Target: gmailparse.mli.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:mli, file:gmailparse.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules gmailparse.mli > gmailparse.mli.depends # cached
# Target: gmailparse.cmi, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:mli, file:gmailparse.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o gmailparse.cmi gmailparse.mli # cached
# Target: scanner.mll, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, quiet, traverse }
ocamllex.opt -q scanner.mll # cached
# Target: scanner.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:scanner.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules scanner.ml > scanner.ml.depends # cached
# Target: scanner.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:scanner.cmo, file:scanner.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o scanner.cmo scanner.ml # cached
# Target: gmail.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:gmail.cmo, file:gmail.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o gmail.cmo gmail.ml # cached
# Target: ast.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o ast.cmx ast.ml # cached
# Target: sast.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:sast.cmx, file:sast.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o sast.cmx sast.ml # cached
# Target: semant.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:semant.cmx, file:semant.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o semant.cmx semant.ml # cached
# Target: lift.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:lift.cmx, file:lift.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o lift.cmx lift.ml # cached
# Target: evalHelper.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:evalHelper.cmx, file:evalHelper.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o evalHelper.cmx evalHelper.ml # cached
# Target: codegen.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:codegen.cmx, file:codegen.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o codegen.cmx codegen.ml # cached
# Target: gmailparse.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:gmailparse.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules gmailparse.ml > gmailparse.ml.depends # cached
# Target: gmailparse.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:gmailparse.cmx, file:gmailparse.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o gmailparse.cmx gmailparse.ml # cached
# Target: scanner.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:scanner.cmx, file:scanner.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o scanner.cmx scanner.ml # cached
# Target: gmail.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:gmail.cmx, file:gmail.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -w +a-4 -package llvm -package llvm.analysis -o gmail.cmx gmail.ml # cached
# Target: gmail.native, tags: { package(llvm), package(llvm.analysis), warn(+a-4), dont_link_with, extension:native, file:gmail.native, link, native, ocaml, program, quiet, traverse }
ocamlfind ocamlopt -linkpkg -package llvm -package llvm.analysis ast.cmx sast.cmx semant.cmx lift.cmx evalHelper.cmx codegen.cmx gmailparse.cmx scanner.cmx gmail.cmx -o gmail.native # cached
# Compilation successful.
